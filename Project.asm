;сортування масиву слів:

array DW 3, 2, 6, 4, 1 
;оголошення масиву 16-бітними (Word) елементів та ініціалізація їхнього значення 
count DW 5
;змінна, яка зберігає кількість елеметнів в масиві 
    mov cx, word ptr count
;копіювання значення к-ті елементів до регістру cx
    dec cx  ; count-1
;зменшення cx на 1 , cx для індексації елементів масиву в подальшому
outerLoop:
;мітка для зовнішнього циклу
    push cx
;запис значення к-ті елементів в стек щоб потім використати його в внутріш. циклі а потім лише повернутись до цього значення 
    lea si, array
;завантаження адреси початку масиву в регістр, для доступу до елеметнів масиву 
;si- регістр для зберігання адреси памʼяті
innerLoop:
;мітка для внутрішнього циклу
    mov ax, [si]
;завантаження значення елементу масиву, на який вказує сі у регістр ах
    cmp ax, [si+2]
;порівняння поточного елементу з наступним
    jl nextStep
;перехід до цієї мітки якщо значення поточного менше за наступного
    xchg [si+2], ax
;обмін цих значень  
    mov [si], ax
;збереження даних, які лежать в регістрі ах, збережуться в памʼять за адресою в регістрі сі 
nextStep:
    add si, 2
;вказуємо на наступний елемент масиву 
    loop innerLoop
;повторення циклу, , зменшення сх на 1, поки не =0
    pop cx
;відновлення попереднього значення сх з стеку 
    loop outerLoop
;повторення зовнішнього циклу, але це для к-ті елементів в масиві -1